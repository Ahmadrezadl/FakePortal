// browser version checking (taken from developer.netscape.com)
// -------------------------------------------------------------

var agt=navigator.userAgent.toLowerCase();

var is_major = parseInt(navigator.appVersion); 
var is_minor = parseFloat(navigator.appVersion); 

var is_nav  = ((agt.indexOf('mozilla')!=-1) && (agt.indexOf('spoofer')==-1) 
             && (agt.indexOf('compatible') == -1) && (agt.indexOf('opera')==-1) 
             && (agt.indexOf('webtv')==-1)); 
var is_nav2 = (is_nav && (is_major == 2)); 
var is_nav3 = (is_nav && (is_major == 3)); 
var is_nav4 = (is_nav && (is_major == 4)); 
var is_nav4up = (is_nav && (is_major >= 4)); 
var is_navonly      = (is_nav && ((agt.indexOf(";nav") != -1) || 
                          (agt.indexOf("; nav") != -1)) ); 
var is_nav5 = (is_nav && (is_major == 5)); 
var is_nav5up = (is_nav && (is_major >= 5)); 

var is_ie   = (agt.indexOf("msie") != -1); 
var is_ie3  = (is_ie && (is_major < 4)); 
var is_ie4  = (is_ie && (is_major == 4) && (agt.indexOf("msie 5.0")==-1) ); 
var is_ie4up  = (is_ie  && (is_major >= 4)); 
var is_ie5  = (is_ie && (is_major == 4) && (agt.indexOf("msie 5.0")!=-1) ); 
var is_ie5up  = (is_ie  && !is_ie3 && !is_ie4); 

var is_aol   = (agt.indexOf("aol") != -1); 
var is_aol3  = (is_aol && is_ie3); 
var is_aol4  = (is_aol && is_ie4); 

var is_opera = (agt.indexOf("opera") != -1); 
var is_webtv = (agt.indexOf("webtv") != -1); 

// 10-22-04 don't need is_safari because safari fits in the is_nav4up category
//var is_safari = (agt.indexOf("safari") != -1);

var is_js; 
if (is_nav2 || is_ie3) is_js = 1.0 
else if (is_nav3 || is_opera) is_js = 1.1 
else if ((is_nav4 && (is_minor <= 4.05)) || is_ie4) is_js = 1.2 
else if ((is_nav4 && (is_minor > 4.05)) || is_ie5) is_js = 1.3 
else if (is_nav5) is_js = 1.4 
else if (is_nav && (is_major > 5)) is_js = 1.4 
else if (is_ie && (is_major > 5)) is_js = 1.3 
else is_js = 0.0; 


// global functions
// -----------------

function getMouseRelativeX() {
  return( parseInt(window.event.clientX) );
}
function getMouseRelativeY() {
  return( parseInt(window.event.clientY) );
}
function getMouseX() {
  if (is_nav4up) {
    return( parseInt(window.event.clientX) );
  } else if (is_ie4up) {
    return( parseInt(window.event.clientX) + parseInt(document.body.scrollLeft) );
  }
}
function getMouseY() {
  if (is_nav4up) {
    return( parseInt(window.event.clientY) );
  } else if (is_ie4up) {
    return( parseInt(window.event.clientY) + parseInt(document.body.scrollTop) );
  }
}

function getWidth(obj) {
  if (is_ie4up) {
    return( parseInt(obj.offsetWidth) );
  } else {
     //return( parseInt(obj.clientWidth) );
     return( parseInt(obj.offsetWidth) );
  }
}



function getHeight(obj) {
  if (is_ie4up) {
    return( parseInt(obj.offsetHeight) );
  } else { 
    //return( parseInt(obj.clientHeight) );
     return( parseInt(obj.offsetHeight) );
  }
}


function getLeft(obj) {
  if (is_ie4up) {
    return( parseInt(obj.offsetLeft) );	
  } else {
    return( parseInt(obj.offsetLeft) );	
  }
}

 
function getTop(obj) {
  if (is_ie4up) {
    return( parseInt(obj.offsetTop) );	
  } else {
    return( parseInt(obj.offsetTop) );
  }
}



function getXcoord(obj) {
	    x = getLeft(obj);
	    while (obj.offsetParent.tagName != "BODY") {
	      obj = obj.offsetParent;
	      x += getLeft(obj);
	    }
	    return( x );
}

function getYcoord(obj) {
    y = getTop(obj);
    while (obj.offsetParent.tagName != "BODY") {
      obj = obj.offsetParent;
      y += getTop(obj);
    }
    return( y );
}

_elm_map = new Array();

function isHidden(obj) {
  return( obj.style.display == "none" );
  //return(obj.style.visibility='hidden');
}
function hideObject(obj) {
  obj.style.display = "none";
  //obj.style.visibility='hidden';
}
function showObject(obj) {
  obj.style.display = "";
  //obj.style.visibility='visible';
}

function trim(str) {
  var idx_start = 0;
  var idx_end = str.length - 1;
  while (str.charAt(idx_start) == ' ') { idx_start++; }	
  while (str.charAt(idx_end) == ' ') { idx_end--; }	
  return( str.substr(idx_start, (idx_end - idx_start + 1)) );
}

function trim_nums(str) {
  var idx_start = 0;
  var idx_end = str.length - 1;
  while (str.charAt(idx_start) == ' ' || !isNaN(str.charAt(idx_start)) || str.charAt(idx_start) == '_') { idx_start++; }	
  while (str.charAt(idx_end) == ' ' || !isNaN(str.charAt(idx_end)) || str.charAt(idx_end) == '_') { idx_end--; }	
  return( str.substr(idx_start, (idx_end - idx_start + 1)) );
}

function set_cookie(sName, sValue) {
  document.cookie = sName + "=" + escape(sValue) + ";";
}

function del_cookie(sName) {
  document.cookie = sName + "=x;expires=Mon, 01 Jan 1901 12:12:12 UTC;";
}

function get_cookie(sCookie) {
  var aCookie = document.cookie.split(";");
  for (var i = 0; i < aCookie.length; i++)
  {
    var aCrumb = aCookie[i].split("=");
    if (sCookie == trim(unescape(aCrumb[0]))) {
      return( unescape(aCrumb[1]) );
    }
  }
  return( null );
}


// global event handlers
// ----------------------

var _global_doc_handlers = new Array();

function add_global_event_handler(h_type, callback_function_name) {
  if (!_global_doc_handlers[h_type]) {
    _global_doc_handlers[h_type] = new Array();
    _global_doc_handlers[h_type][0] = 0;
  }
  _global_doc_handlers[h_type][0] = _global_doc_handlers[h_type][0] + 1;
  _global_doc_handlers[h_type][_global_doc_handlers[h_type][0]] = callback_function_name;
}

function call_global_event_handler(h_type) {
  if (_global_doc_handlers[h_type]) {
    for(i = 1; i < _global_doc_handlers[h_type][0] + 1; i++) {
      eval(_global_doc_handlers[h_type][i]);	
    }
  } 	
}

function _global_onmousemove() {
  call_global_event_handler('onmousemove');
}
function _global_onload() {
  call_global_event_handler('onload');
}
function _global_onbeforeunload() {
  call_global_event_handler('onbeforeunload');
}

document.onmousemove  = _global_onmousemove;
window.onload         = _global_onload;
window.onbeforeunload = _global_onbeforeunload;

if (is_nav4up) { 

	function WM_getCursorHandler(e) {
	  // set event properties to global vars (add or subtract as desired)
	  window.event.clientX = e.pageX;
	  window.event.clientY = e.pageY;
	  window.event.x = e.layerX;
	  window.event.y = e.layerY;
	  window.event.screenX = e.screenX;
	  window.event.screenY = e.screenY;
	  // route the event back to the intended function
	  if ( routeEvent(e) == false ) {
	    return false;
	  } else {
	    return true;
	  }
	}

	// emulate window.event for netscape
	if(!window.event && window.captureEvents) {
	  // set up event capturing for mouse events (add or subtract as desired)
	  window.captureEvents(Event.MOUSEOVER|Event.MOUSEOUT|Event.CLICK|Event.DBLCLICK|Event.MOUSEMOVE);
	  // set window event handlers (add or subtract as desired)
	  window.onmouseover = WM_getCursorHandler;
	  window.onmouseout = WM_getCursorHandler;
	  window.onclick = WM_getCursorHandler;
	  window.ondblclick = WM_getCursorHandler;
	  // create an object to store the event properties
	  window.event = new Object;
	}



document.captureEvents(Event.MOUSEMOVE); }